/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package imrserver;

import java.io.File;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import imrserver.SimpleWebBrowserExample;
import imrserver.sensorInWebTIBBO;
import chrriis.dj.nativeswing.swtimpl.NativeInterface;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.event.*;
import javax.swing.*;
import java.util.Timer;
import java.util.TimerTask;
import java.text.SimpleDateFormat;
import java.util.Date; 
import java.net.*;
import java.io.*;
import java.util.HashMap;
import java.util.Iterator;

import org.json.JSONArray;
import org.json.JSONObject;
import pubnub.api.Pubnub;
import pubnub.api.Callback;

/**
 *
 * @author Bruce's Lab Computer
 */
public class iMRServerVisual extends javax.swing.JFrame {
//    public static MemoryMonitor memorymonitor;
    /**
     * Creates new form iMRServerVisual
     */
    public static int timerTime;
    
    /*The following cods is for custemize code of temperatureMonitor1
     * 我們必須將之設成全域變數，不然寫在item中的客製函數不能往外面抓值
     * 簡單想法->我客製的程式碼裡面為區域變數...一旦啟動後便不會再更動了
     * 但我要的是一直存在於程式中的變數，所以就要變成全域...
     */
    public static Timer timer;
    public static ReschedulableTimerTask task;
    public static float tempTemperatureValue = 27;
    
    public static Timer timerForPressure;
    public static ReschedulableTimerTask taskForPressure;
    public static float tempPressureValue = 1004;
    
    public static capSubscriber capSub = new capSubscriber();
    
    
    public iMRServerVisual() {
        initComponents();
        
    }
    
    public static SimpleWebBrowserExample a = new SimpleWebBrowserExample();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        temperatureMonitor1 = new imrserver.TemperatureMonitor();
        jPanel10 = new javax.swing.JPanel();
        nowTemperatureValueLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pressureMonitor1 = new imrserver.PressureMonitor();
        jPanel6 = new javax.swing.JPanel();
        readCAPBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton4.setText("Details of sensor");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        nowTemperatureValueLabel.setFont(new java.awt.Font("新細明體", 0, 14)); // NOI18N
        nowTemperatureValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nowTemperatureValueLabel.setText("25");
        nowTemperatureValueLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nowTemperatureValueLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setText("C");

        jLabel2.setText("Now");

        jLabel1.setText("Teperature:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nowTemperatureValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7))
                    .addComponent(jLabel1))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nowTemperatureValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(temperatureMonitor1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temperatureMonitor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 32, Short.MAX_VALUE))
        );

        //Timer timer;
        //ReschedulableTimerTask task;
        //float tempTemperatureValue = 27;

        /*
        */
        task = new ReschedulableTimerTask() {
            @Override
            public void run() {
                System.out.println("RunTime:"+new SimpleDateFormat("HH:mm:ss").format(new Date()));
                tempTemperatureValue =  (float)(Math.random()*15+20);
                temperatureMonitor1.setTempeatureValue(tempTemperatureValue);
                //        System.out.println("Temperature:" + tempTemperatureValue);
                nowTemperatureValueLabel.setText(String.valueOf(tempTemperatureValue));     //更新現在溫度顯示
            }
        };
        timer = new Timer();
        timer.schedule(task, 2000, 2000);//每两秒执行一次

        jLabel3.setText("Pressure:");

        jLabel4.setText("Now");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("1004");

        jLabel6.setText("mbar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(0, 92, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(pressureMonitor1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(326, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pressureMonitor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        taskForPressure = new ReschedulableTimerTask() {
            @Override
            public void run() {
                System.out.println("RunTime:"+new SimpleDateFormat("HH:mm:ss").format(new Date()));
                tempPressureValue =  (float)(Math.random()*10+1000);
                pressureMonitor1.setTempeatureValue(tempPressureValue);
                //        System.out.println("Temperature:" + tempTemperatureValue);
                jLabel5.setText(String.valueOf(tempPressureValue));
            }
        };
        timerForPressure = new Timer();
        timerForPressure.schedule(taskForPressure, 2000, 2000);//每两秒执行一次

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 227, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sensors status", jPanel3);
        //asynkTimer asynkTimer = new asynkTimer();
        //asynkTimer.run();

        //底下是計時器的第一方法
        //timer = new Timer();
        //timer.schedule(new asynkTimer(), 3000, 1000);

        //task=new ReschedulableTimerTask() {
            //            @Override
            //            public void run() {
                //                System.out.println("RunTime:"+new SimpleDateFormat("HH:mm:ss").format(new Date()));
                //            }
            //};
        //timer=new Timer();
        //timer.schedule(task, 2000, 2000);//每两秒执行一次

        //SubscribeExample();

        capSub.start();

        readCAPBtn.setText("See Location");
        readCAPBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readCAPBtnActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(readCAPBtn)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(readCAPBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 424, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cap details", jPanel6);
        //imrserver.TemperatureMonitor memorymonitor;
        //memorymonitor = new imrserver.TemperatureMonitor();
        //jPanel6.add(memorymonitor);

        //showCAPPanel c = new showCAPPanel();
        //c.setBounds(0, 200, 800, 500);
        //NativeInterface.open();
        //jPanel6.add(c);

        jTextField1.setEditable(false);
        jTextField1.setText("e://Weather.xml");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel8.setText("CAP message location");

        jButton1.setText("Change");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Sensor data location");

        jTextField2.setEditable(false);
        jTextField2.setText("e://test.txt");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setText("Change");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setText("Tibbo boarce IP address");

        jTextField3.setEditable(false);
        jTextField3.setText("192.168.0.145");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton3.setText("Change");

        jLabel11.setText("Timer period");

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.setText("1");

        jLabel12.setText("Seconds");

        jButton5.setText("Change");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel13.setText("My location");

        jTextField5.setText("23.692811");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel14.setText("East longitude");

        jLabel15.setText("North latitude");

        jTextField6.setText("120.53413");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11))
                        .addGap(69, 69, 69))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jButton5))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(390, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Setting", jPanel2);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 823, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 614, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Rescue Web", jPanel8);
        SimpleWebBrowserExample a = new SimpleWebBrowserExample();
        NativeInterface.open();
        a.setBounds(0, 0, 800, 800);
        jPanel8.add(a);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 823, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 614, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("TIBBO", jPanel7);
        sensorInWebTIBBO b = new sensorInWebTIBBO(jTextField3.getText());
        NativeInterface.open();
        b.setBounds(0, 0, 800, 800);
        jPanel7.add(b);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("About:\nThis is iMRS program by Chun-Yu Lin.\nI designed this on 2012/10/29 for WESC12.\nI hope this message can help us to win this game.");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 456, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("About", jPanel5);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 828, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JOptionPane a = new JOptionPane();
        int reply = a.showConfirmDialog(null, "You sure you want to chage?", "Alert", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION)
        {
//          System.exit(0);
            String ans = JOptionPane.showInputDialog(null,"Please key address","Messge",JOptionPane.INFORMATION_MESSAGE);
            if(ans != null){
                try {
//            File stocks = new File("e://Stocks.xml");
                    //底下做資料確認位置是否有錯
                    File stocks = new File(ans);
                    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                    DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                    Document doc = dBuilder.parse(stocks);
                    doc.getDocumentElement().normalize();
                    String testStr = doc.getDocumentElement().getNodeName();
                    if(testStr != null){
                        jTextField1.setText(ans);
                        JOptionPane.showConfirmDialog(null, "Modify finish", "Messge", JOptionPane.YES_NO_OPTION);
                    }
                } catch (Exception ex) {
                    JOptionPane.showConfirmDialog(null, "Please check file address or the file exist or not", "Alert", JOptionPane.YES_NO_OPTION);
                    ex.printStackTrace();
                }
                
                
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public void msgBox(String msg, String title){
        JOptionPane a = new JOptionPane();
        int reply = a.showConfirmDialog(null, msg, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION)
        {
//          System.exit(0);
            
            
            
        }
    }
    
    
    private void readCAPBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readCAPBtnActionPerformed
        // TODO add your handling code here:
//        readXML("e://Weather.xml");
        readXML(jTextField1.getText());
        JOptionPane.showConfirmDialog(null, "Refresh finish", "Messge", JOptionPane.YES_NO_OPTION);
        showCAPPanel c = new showCAPPanel();
        c.setBounds(0, 200, 800, 500);
        NativeInterface.open();
        jPanel6.add(c);
        
        
        try{
            //Java必須使用java.net套件 所以按手冊會使用URL、HttpURLConnecion等class
            URL ul = new URL("http://140.125.45.107/controlGet.html");
            URLConnection   connection   =   ul.openConnection(); 
            HttpURLConnection   uc   =   (HttpURLConnection)   connection;       
            //做好 HttpURLConnection class的instance即可做httprequest
            //但要設定以下的 環境參數
            uc.setRequestMethod("POST");  //POST 的重要參數
            uc.setRequestProperty ( "Connection", "Keep-Alive" ) ; 
            uc.setRequestProperty ( "Cache-Control", "no-cache" ) ;    
            //POST 的重要參數
            uc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
            //如果有做cookie測試 java 要使用COOKIE不能用http_cookie
            uc.setRequestProperty("COOKIE", "william");  
            //HttpURLConnection如果要進行發送 跟讀取回傳 就必須設定以下兩個property為true
            uc.setDoOutput(true);  
            uc.setDoInput(true);   
            //POST參數必須這樣寫 sample為XMLDOC
            String xml = "?text1";      //這要去掉=...別問我為啥(text=)，
            byte[] bs = new String(xml).getBytes();    
            //HttpURLConnection做連線,必須connect、 outputstream一氣喝成 否則資料會傳不到.asp程式內
            uc.connect();        
            OutputStream om = uc.getOutputStream();
            om.write(bs);
            om.flush();
            om.close();
            //寫入參數資料close完後再open inputstream
            //sample這裡的問題是用bs接收並沒有考慮回傳的資料大小..有需要人請自行再改寫
            InputStream  im = uc.getInputStream();       
            im.read(bs);
            System.out.println(new String(bs));        
            im.close();
            uc.disconnect();
        }catch (Exception e){System.out.println("Something wrong"+e.getMessage());}
    }//GEN-LAST:event_readCAPBtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Runtime runtime = Runtime.getRuntime();
        Process process = null;
        try {
            //      process = runtime.exec("C:/Program Files/Windows Media Player/wmplayer.exe c:/Give.mp3");
            process = runtime.exec("C:/Unico_Lite.exe");
        }
        catch (IOException e) {
            System.out.println(e);
            runtime.exit(0);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JOptionPane a = new JOptionPane();
        int reply = a.showConfirmDialog(null, "You sure you want to chage?", "Alert", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION)
        {
//          System.exit(0);
            String ans = JOptionPane.showInputDialog(null,"Please key address","Messge",JOptionPane.INFORMATION_MESSAGE);
            if(ans != null){
                try {
                    //底下做資料確認位置是否有錯
                    getLines(ans);
                } catch (Exception ex) {
                    JOptionPane.showConfirmDialog(null, "Please check file address or the file exist or not", "Alert", JOptionPane.YES_NO_OPTION);
                    ex.printStackTrace();
                }            
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    //底下用來確認TXT黨，我這裡只是做確認所以不去做印出的動作
    public static List<String> getLines(String fileName){
		List<String> lines=new ArrayList<String>();
		try {
			BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(fileName),"UTF-8"));
			String line = null;
//			while ((line = br.readLine()) != null) {
//				lines.add(line);
//                                System.out.println(line);
//			}
			br.close();
                        JOptionPane.showConfirmDialog(null, "File check successful!", "Alert", JOptionPane.YES_NO_OPTION);
                        jTextField2.setText(fileName);
//                        for(int i=0;i<lines.size();i++){
//                            System.out.println(lines.get(i));
//                        }
		} catch (FileNotFoundException e) {
                    JOptionPane.showConfirmDialog(null, "Please check file address or the file exist or not", "Alert", JOptionPane.YES_NO_OPTION);
                    e.printStackTrace();
		}catch (IOException e) {}
		return lines;
   }
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
//        timer.setPeriod(1000);
        
        JOptionPane a = new JOptionPane();
        int reply = a.showConfirmDialog(null, "You sure you want to chage?", "Alert", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION)
        {
//          System.exit(0);
            String ans = JOptionPane.showInputDialog(null,"Please key address","Messge",JOptionPane.INFORMATION_MESSAGE);
            if(ans != null){
                try {
                    jTextField4.setText(ans);
                    //記得因為有兩個監視ITEM所以要重設兩個
                    task.setPeriod(Integer.parseInt(jTextField4.getText())*1000);//改为每秒执行一次
                    taskForPressure.setPeriod(Integer.parseInt(jTextField4.getText())*1000);//改为每秒执行一次
                } catch (Exception ex) {
                    JOptionPane.showConfirmDialog(null, "Please enter words again", "Alert", JOptionPane.YES_NO_OPTION);
                    ex.printStackTrace();
                }            
            }
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(iMRServerVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(iMRServerVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(iMRServerVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(iMRServerVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new iMRServerVisual().setVisible(true);
            }
        });
        
        float aaa = (float)(Math.random()*15);
//        timerTime = Integer.parseInt(jTextField4.getText());
//        timer();
    }
    
//    public static void setJPanel(String url){
//       SimpleWebBrowserExample a = new SimpleWebBrowserExample();
//       NativeInterface.open();
////       a.setURL(url);
//       
//       jTabbedPane1.addTab("Web", a);
////       a.setURL(url);
//       a.reload();
////         jPanel8.add(new SimpleWebBrowserExample());
//    }
    
//    public static void setMapPanel(String url){
//        for(int i=0;i<5;i++){
//            try{
//                Thread.sleep(1000);
//            }catch(Exception e){}
//        }
//       sensorInWebTIBBO b = new sensorInWebTIBBO();
////       NativeInterface.open();
//       jTabbedPane1.addTab("TIBBO", b);
//
//    }
    
    public static void timer(){
        asynkTimer a = new asynkTimer();
        a.run();
    }
    
    public void readXML (String dataAddress){
        try {
//            File stocks = new File("e://Stocks.xml");
            File stocks = new File(dataAddress);
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(stocks);
            doc.getDocumentElement().normalize();

            System.out.println("root of xml file" + doc.getDocumentElement().getNodeName());
            NodeList nodes = doc.getElementsByTagName("information");
            System.out.println("==========================");
            jTextArea2.append("==========================" + "\n");
            for (int i = 0; i < nodes.getLength(); i++) {
                Node node = nodes.item(i);

                if (node.getNodeType() == Node.ELEMENT_NODE) {
                    Element element = (Element) node;
                    jTextArea2.append("Type: " + getValue("type", element) + "\n");
                    jTextArea2.append("經度: " + getValue("longitude", element) + "\n");
                    jTextArea2.append("緯度: " + getValue("latitude", element) + "\n");
                }
             }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public void readSensorXML (String dataAddress){
        try {
//            File stocks = new File("e://Stocks.xml");
            File stocks = new File(dataAddress);
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(stocks);
            doc.getDocumentElement().normalize();

            System.out.println("2.----root of xml file" + doc.getDocumentElement().getNodeName());
            NodeList nodes = doc.getElementsByTagName("information");
            System.out.println("==========================");
            for (int i = 0; i < nodes.getLength(); i++) {
                Node node = nodes.item(i);
                if (node.getNodeType() == Node.ELEMENT_NODE) {
                    Element element = (Element) node;
                    jTextArea2.append("Type: " + getValue("type", element) + "\n");
                    jTextArea2.append("經度: " + getValue("longitude", element) + "\n");
                    jTextArea2.append("緯度: " + getValue("latitude", element) + "\n");
                }
             }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    
    //讀取XML資料的副程式
    private static String getValue(String tag, Element element) {
            NodeList nodes = element.getElementsByTagName(tag).item(0).getChildNodes();
            Node node = (Node) nodes.item(0);
            return node.getNodeValue();
    }
    /*-----------------------Monitor-------------------------------------------
     -------------------------------------------------------------------------*/
    
    private static void SubscribeExample() {
        
        
        
		String publish_key = "pub-43c1c25b-fdc5-4542-999f-aededd4712a9";
		String subscribe_key = "sub-1d31c78c-3224-11e2-b72b-1f30d5a10c60";
		String secret_key = "sec-MzkzYTMyNDEtYzI1OS00YzJjLTgwOGItY2M3NWEwYmMxZmI5";
		String cipher_key = ""; // (Cipher key is optional)
		String channel = "my_channel";
		
                Pubnub pubnub  = new Pubnub( publish_key, subscribe_key );
//		Pubnub pubnub = new Pubnub(
//				publish_key,
//				subscribe_key,
//				secret_key,
//				cipher_key,
//				true
//		);
		
		// Callback Interface when a Message is Received
                class Receiver implements Callback {
                            public boolean subscribeCallback(String channel, Object message) {
                                try {
                                    if (message instanceof JSONObject) {
                                        JSONObject obj = (JSONObject) message;
                                        @SuppressWarnings("rawtypes")
                                                                Iterator keys = obj.keys();
                                        while (keys.hasNext()) {
                                            System.out.print(obj.get(keys.next().toString()) + " ");
                                        }
                                        System.out.println();
                                    } else if (message instanceof String) {
                                        String obj = (String) message;
                                        System.out.print(obj + " ");
                                        System.out.println();
                                    } else if (message instanceof JSONArray) {
                                        JSONArray obj = (JSONArray) message;
                                        System.out.print(obj.toString() + " ");
                                        System.out.println();
                                    }
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }
                                // Continue Listening?
                              return true;
                        }

			@Override
			public void errorCallback(String channel, Object message) {
				System.err.println("Channel:" + channel + "-" + message.toString());
				
			}

			@Override
			public void connectCallback(String channel) {
				System.out.println("Connected to channel :" + channel);
				System.out.println("Waiting for a message from publisher ...");
			}

			@Override
			public void reconnectCallback(String channel) {
				System.out.println("Reconnected to channel :" + channel);
			}

			@Override
			public void disconnectCallback(String channel) {
				System.out.println("Disconnected to channel :" + channel);
			}

			@Override
			public boolean presenceCallback(String channel, Object message) {
				return false;
			}
                }

                HashMap<String, Object> args = new HashMap<String, Object>(6);
                args.put("channel", channel);
                args.put("callback", new Receiver());					// callback to get response

                // Listen for Messages (Subscribe)
                pubnub.subscribe(args);
	}
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private static javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    public static javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    public static javax.swing.JLabel nowTemperatureValueLabel;
    public static imrserver.PressureMonitor pressureMonitor1;
    private javax.swing.JButton readCAPBtn;
    public static imrserver.TemperatureMonitor temperatureMonitor1;
    // End of variables declaration//GEN-END:variables
}


